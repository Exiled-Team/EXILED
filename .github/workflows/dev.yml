name: Exiled Dev CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  EXILED_REFERENCES_URL: https://cdn.exiled.to/Dev.zip
  EXILED_REFERENCES_PATH: ${{ github.workspace }}/References
  EXILED_DLL_ARCHIVER_URL: https://github.com/Exiled-Team/Exiled.Archiver/releases/latest/download/Exiled.Archiver.exe

jobs:

  build:

    runs-on: windows-latest
    # Prevent double running for push & pull_request events from the main repo
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'Exiled-Team/Exiled'

    steps:

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2

    - name: Setup Nuget
      uses: iRebbok/setup-nuget@master

    - uses: actions/checkout@v2.3.4

    - name: Get references
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri ${{ env.EXILED_REFERENCES_URL }} -OutFile ${{ github.workspace }}/References.zip
        Expand-Archive -Path References.zip -DestinationPath ${{ env.EXILED_REFERENCES_PATH }}

    - name: Build
      env:
        EXILED_REFERENCES: ${{ env.EXILED_REFERENCES_PATH }}
      shell: pwsh
      run: |
        ./build.ps1 -BuildNuGet
        $File = (Get-ChildItem -Path . -Include 'EXILED.*.nupkg' -Recurse).Name
        Out-File -FilePath ${{ github.env }} -InputObject "PackageFile=$File" -Encoding utf-8 -Append

    - name: Upload nuget package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PackageFile }}
        path: ${{ env.PackageFile }}
        
    - name: Get references
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri ${{ env.EXILED_DLL_ARCHIVER_URL }} -OutFile ${{ github.workspace }}/Exiled.Archiver.exe
  
    - name: Packaging results as tar.gz
      shell: pwsh
      run: ./packaging.ps1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build Result
        path: bin/Release/Exiled.tar.gz

